openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Sample API'
  description: Initial example to submit Elasticsearch queries

paths:
  /search:
    get:
      summary: 'Submits a query to Elasticsearch'
      operationId: search
      tags:
        - search
      parameters:
        - name: query
          in: query
          description: Query to be submitted
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search-Options'

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Result:
      type: object
      properties:

        time:
          type: integer

        hits:
          type: integer

        suggest:
          type: string

        Results:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              url:
                type: string
              abs:
                type: string
              dt-creation:
                type: string
              reading-time:
                type: integer
              search-terms:
                type: array
                items:
                  type: string
              not-found:
                type: array
                items:
                  type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string

    Sort:
      type: object
      required:
        - field
        - mode
      properties:
        field:
          type: string
          enum: [dt_creation, reading_time]
        mode:
          type: string
          enum: [asc, desc]

    Filter:
      type: object
      required:
        - mode
        - field
        - value
      properties:
        field:
          type: string
          enum: [dt_creation, reading_time]
        value:
          type: string
        mode:
          type: string
          enum: [gt, lt]

    Filter-Between:
      type: object
      required:
        - field
        - start-value
        - end-value
      properties:
        field:
          type: string
          enum: [dt_creation, reading_time]
        start-value:
          type: string
        end-value:
          type: string

    Search-Options:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
        sort:
          $ref: '#/components/schemas/Sort'
        filterBetween:
          $ref: '#/components/schemas/Filter-Between'
      additionalProperties: false